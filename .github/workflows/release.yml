name: release

on:
  push:
    branches: ['master']
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - '.dockerignore'
      - 'build.sh'
  workflow_dispatch:
jobs:
  docker: 
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        uses: docker/build-push-action@v4
        id: mini_image_id
        with:
          context: .
          load: true
          push: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Extract Docker Image
        id: ex
        run: |
          docker images
          mini_image_id="${{ steps.mini_image_id.outputs.imageid }}"
          mini_image_id=${mini_image_id:7}
          mkdir mini
          cd mini
          docker save -o mini.tar $mini_image_id
          tar xvf mini.tar
          cat manifest.json
          tar xvf $(sed 's/","/\n/g' manifest.json | sed 's/"]}/\n/g' | tac | sed -n "2,2p")
          tar xvf $(sed 's/","/\n/g' manifest.json | sed 's/"]}/\n/g' | tac | sed -n "3,3p")
          tar xvf $(sed 's/","/\n/g' manifest.json | sed 's/"]}/\n/g' | tac | sed -n "4,4p" | sed 's/^\(.*\)\"//g')
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: app
          path: mini/app/*
  mac: 
    runs-on: macos-12

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Rust
        uses: moonrepo/setup-rust@v1
        with:
         channel: 1.74.1
      - name: Build
        run: |
         cargo build --release
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
           name: app
           path: target/release/until
  release:
    runs-on: ubuntu-20.04
    needs: ["mac","docker"]
    permissions:
        contents: write
        packages: write
    steps:
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: Download artifacts
          uses: actions/download-artifact@v3
          with:
            name: app
            path: app/
        - name: Download Mac M2
          run: |
            tag=$(curl -s "https://api.github.com/repos/inkroom/until/releases/latest" | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/\"//g;s/,//g;s/ //g')
            wget "https://github.com/inkroom/until/releases/download/$tag/until_mac_m2"
            mv until_mac_m2 ./app/
        - name: Release
          env:
            GH_TOKEN: ${{ github.token }}
          run: |
            gh release create --target master $(date +%Y%m%d) ./app/*
  